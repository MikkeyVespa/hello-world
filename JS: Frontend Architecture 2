my decision:

/* eslint-disable no-param-reassign */
// @ts-check

import axios from 'axios';

const routes = {
  tasksPath: () => '/api/tasks',
};

// BEGIN (write your solution here)
export default function createTodoApp() {
  const form = document.querySelector('.form-inline');
  const input = document.querySelector('input[name="name"]');
  const taskList = document.getElementById('tasks');

  function renderTasks(tasks) {
    taskList.innerHTML = '';
    tasks.forEach((task) => {
      const li = document.createElement('li');
      li.className = 'list-group-item';
      li.textContent = task.name;
      taskList.appendChild(li);
    });
  }

  async function updateTaskList() {
    try {
      const response = await axios.get(routes.tasksPath());
      const tasks = response.data.items;
      renderTasks(tasks);
    } catch (error) {
      console.error(error);
    }
  }

  async function addTask(event) {
    event.preventDefault();
    const name = input.value;
    if (!name) return;
    const data = { name };
    try {
      await axios.post(routes.tasksPath(), data);
      input.value = '';
      updateTaskList();
    } catch (error) {
      console.error(error);
    }
  }
  form.addEventListener('submit', addTask);

  updateTaskList();
}
// END



teacher's decision:

/* eslint-disable no-param-reassign */
// @ts-check

import axios from 'axios';

const routes = {
  tasksPath: () => '/api/tasks',
};

// BEGIN
const render = (state, { form, input, tasksContainer }) => {
  form.reset();
  input.focus();
  const tasksElements = state.tasks.map((task) => {
    const el = document.createElement('li');
    el.classList.add('list-group-item');
    el.textContent = task.name;
    return el;
  });

  tasksContainer.replaceChildren(...tasksElements);
};

const app = async () => {
  const response = await axios.get(routes.tasksPath());

  const state = {
    tasks: response.data.items,
  };

  const form = document.querySelector('form');
  const input = document.querySelector('input');
  const tasksContainer = document.querySelector('#tasks');
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const data = {
      name: formData.get('name'),
    };
    try {
      await axios.post(routes.tasksPath(), data);
      state.tasks.unshift(data);
    } catch (error) {
      console.error(error); // eslint-disable-line no-console
    }

    render(state, { form, input, tasksContainer });
  });

  render(state, { form, input, tasksContainer });
};

export default app;
// END
