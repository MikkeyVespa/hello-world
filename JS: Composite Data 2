my decision

import { cons, car, cdr, toString } from '@hexlet/pairs'; // eslint-disable-line

// BEGIN (write your solution here)
const reversePair = (pair) => {
  const firstValue = cdr(pair);
  const secondValue = car(pair);
  return cons(firstValue, secondValue);
};
// END
export default reversePair;

import { cons, car, cdr, toString } from '@hexlet/pairs'; // eslint-disable-line

// BEGIN (write your solution here)
const sumOfPairs = (pair1, pair2) => cons(car(pair1) + car(pair2), cdr(pair1) + cdr(pair2));
// END
export default sumOfPairs;

// @ts-check
import { car, cdr, isPair, toString } from '@hexlet/pairs'; // eslint-disable-line

// BEGIN (write your solution here)
const findPrimitiveBox = (pair) => {
  const firstValue = car(pair);
  const secondValue = cdr(pair);
  if (isPair(firstValue)) {
    return findPrimitiveBox(firstValue);
  } if (isPair(secondValue)) {
    return findPrimitiveBox(secondValue);
  }
  return pair;
};
// END

export default findPrimitiveBox;


teacher's decision

// @ts-check
import { car, cdr, isPair, toString } from '@hexlet/pairs'; // eslint-disable-line

// BEGIN
const findPrimitiveBox = (pair) => {
  const first = car(pair);
  const last = cdr(pair);

  if (!isPair(first) && !isPair(last)) {
    return pair;
  }

  const next = isPair(first) ? first : last;
  return findPrimitiveBox(next);
};
// END

export default findPrimitiveBox;
